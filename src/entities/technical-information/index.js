import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Input } from "@shared/ui/Input";
import QuestionIcon from "@shared/icons/question-icon";
import Switch from "@shared/ui/Switch";
import styles from "@widgets/project/styles.module.scss";
import { PrimaryButton } from "@shared/ui/PrimaryButton";
var TechnicalInformation = function (_a) {
    var selectedMethod = _a.selectedMethod, handleMethodChange = _a.handleMethodChange, isOverrideURLSwitchOn = _a.isOverrideURLSwitchOn, handleToggleOverrideURL = _a.handleToggleOverrideURL, isSignatureAlgorithmSwitchOn = _a.isSignatureAlgorithmSwitchOn, handleToggleSignatureAlgorithm = _a.handleToggleSignatureAlgorithm;
    return (_jsxs("div", { className: "p-8 mb-8", children: [_jsx("span", { className: "text-3xl font-light", children: "\u0422\u0435\u0445\u043D\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F" }), _jsxs("div", { className: "flex flex-col mt-12", children: [_jsxs("div", { className: "flex flex-row gap-4 items-center", children: [_jsx("span", { className: "w-1/4", children: "ID \u043F\u0440\u043E\u0435\u043A\u0442\u0430" }), _jsx("span", { className: "flex-grow", children: "9373" })] }), _jsxs("div", { className: "flex flex-row gap-4 mt-8 items-center", children: [_jsx("span", { className: "w-1/4", children: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435 \u043F\u0440\u043E\u0435\u043A\u0442\u0430" }), _jsx(Input, { placeholder: "", width: styles.input })] }), _jsxs("div", { className: "flex flex-row gap-4 mt-8 items-center", children: [_jsx("span", { className: "w-1/4", children: "\u0421\u0435\u043A\u0440\u0435\u0442\u043D\u044B\u0439 \u043A\u043B\u044E\u0447" }), _jsx(Input, { placeholder: "", width: styles.input, type: "password", isIcon: false })] })] }), _jsxs("div", { className: "flex flex-col mt-12 ", children: [_jsxs("div", { className: "flex flex-row gap-4 items-center", children: [_jsxs("span", { className: "w-1/4 flex flex-row items-center gap-2", children: ["URL \u043E\u043F\u043E\u0432\u0435\u0449\u0435\u043D\u0438\u044F", _jsx("div", { className: "flex items-center justify-center rounded-full border border-[#B7B7B7] h-6 w-6", children: _jsx(QuestionIcon, {}) })] }), _jsx(Input, { placeholder: "", width: "flex-grow" }), _jsxs("select", { className: "p-2 bg-transparent ", value: selectedMethod.notification, onChange: function (event) { return handleMethodChange(event, "notification"); }, children: [_jsx("option", { value: "POST", children: "POST" }), _jsx("option", { value: "GET", children: "GET" }), _jsx("option", { value: "PUT", children: "PUT" }), _jsx("option", { value: "DELETE", children: "DELETE" })] })] }), _jsxs("div", { className: "flex flex-row gap-4 mt-8 items-center", children: [_jsxs("span", { className: "w-1/4 flex flex-row items-center gap-2", children: [_jsxs("div", { className: "flex flex-col", children: [_jsx("span", { children: "URL" }), _jsxs("span", { className: "flex flex-row", children: ["\u0443\u0441\u043F\u0435\u0448\u043D\u043E\u0439", _jsx("span", { className: "ml-1", children: "\u043E\u043F\u043B\u0430\u0442\u044B" })] })] }), _jsx("div", { className: "flex items-center justify-center rounded-full border border-[#B7B7B7] h-6 w-6", children: _jsx(QuestionIcon, {}) })] }), _jsx(Input, { placeholder: "", width: "flex-grow" }), _jsxs("select", { className: "p-2 bg-transparent ", value: selectedMethod.success, onChange: function (event) { return handleMethodChange(event, "success"); }, children: [_jsx("option", { value: "POST", children: "POST" }), _jsx("option", { value: "GET", children: "GET" }), _jsx("option", { value: "PUT", children: "PUT" }), _jsx("option", { value: "DELETE", children: "DELETE" })] })] }), _jsxs("div", { className: "flex flex-row gap-4 mt-8 items-center", children: [_jsxs("span", { className: "w-1/4 flex flex-row items-center gap-2", children: [_jsxs("div", { className: "flex flex-col", children: [_jsx("span", { children: "URL" }), _jsxs("span", { className: "flex flex-row", children: ["\u043D\u0435 \u0443\u0441\u043F\u0435\u0448\u043D\u043E\u0439", _jsx("span", { className: "ml-1", children: "\u043E\u043F\u043B\u0430\u0442\u044B" })] })] }), _jsx("div", { className: "flex items-center justify-center rounded-full border border-[#B7B7B7] h-6 w-6", children: _jsx(QuestionIcon, {}) })] }), _jsx(Input, { placeholder: "", width: "flex-grow" }), _jsxs("select", { className: "p-2 bg-transparent ", value: selectedMethod.failure, onChange: function (event) { return handleMethodChange(event, "failure"); }, children: [_jsx("option", { value: "POST", children: "POST" }), _jsx("option", { value: "GET", children: "GET" }), _jsx("option", { value: "PUT", children: "PUT" }), _jsx("option", { value: "DELETE", children: "DELETE" })] })] }), _jsxs("div", { className: "flex flex-row gap-4 items-center mt-12", children: [_jsx("span", { className: "w-1/4", children: "\u041F\u0435\u0440\u0435\u043E\u043F\u0440\u0435\u0434\u0435\u043B\u044F\u0442\u044C URL" }), _jsx("span", { className: "".concat(isOverrideURLSwitchOn === false ? "text-black" : "text-[#B7B7B7]"), children: "\u0417\u0430\u043F\u0440\u0435\u0449\u0435\u043D\u043E" }), _jsx(Switch, { isChecked: isOverrideURLSwitchOn, onToggle: handleToggleOverrideURL }), _jsx("span", { className: "".concat(isOverrideURLSwitchOn === true ? "text-black" : "text-[#B7B7B7]"), children: "\u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u043E" })] }), _jsxs("div", { className: "flex flex-row gap-4 items-center mt-12", children: [_jsx("span", { className: "w-1/4", children: "\u0410\u043B\u0433\u043E\u0440\u0438\u0442\u043C \u043F\u043E\u0434\u043F\u0438\u0441\u0438" }), _jsx("span", { className: "".concat(isSignatureAlgorithmSwitchOn === false
                                    ? "text-black"
                                    : "text-[#B7B7B7]"), children: "MD5" }), _jsx(Switch, { isChecked: isSignatureAlgorithmSwitchOn, onToggle: handleToggleSignatureAlgorithm }), _jsx("span", { className: "".concat(isSignatureAlgorithmSwitchOn === true
                                    ? "text-black"
                                    : "text-[#B7B7B7]"), children: "SHA 256" })] })] }), _jsx("div", { className: styles.button, children: _jsx(PrimaryButton, { text: "\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C" }) })] }));
};
export default TechnicalInformation;
